@model LayoutWithContentViewModelBase<AspNetUserRoleLayoutContentsCreateEditViewModel>

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="form-group">
    @Html.LabelFor(model => model.ContentViewModel.Item.UserName, htmlAttributes: new { @class = "control-label " + Model.ContentViewModel.LabelCss })
    @Html.HiddenFor(model => model.ContentViewModel.Item.OldRoleName)
    @Html.HiddenFor(model => model.ContentViewModel.Item.AspNetUserId)
    <div class="@Model.ContentViewModel.FieldCss">
        @if (Model.ContentViewModel.HasParent)
        {
            @Html.HiddenFor(model => model.ContentViewModel.Item.UserName)
            @Html.EditorFor(model => model.ContentViewModel.Item.UserName,
                       new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control eml-form-control",
                               @readonly = true
                           }
                       })
        }
        else
        {
            @Html.EditorFor(model => model.ContentViewModel.Item.UserName, new { htmlAttributes = new { @class = "form-control eml-form-control" } })
            @Html.ValidationMessageFor(model => model.ContentViewModel.Item.UserName, "", new { @class = "text-danger" })
        }
    </div>
</div>


<div class="form-group">
    @Html.LabelFor(model => model.ContentViewModel.Item.Email, htmlAttributes: new { @class = "control-label " + Model.ContentViewModel.LabelCss })
    <div class="@Model.ContentViewModel.FieldCss">
        @if (Model.ContentViewModel.HasParent)
        {
            @Html.HiddenFor(model => model.ContentViewModel.Item.Email)
            @Html.EditorFor(model => model.ContentViewModel.Item.Email,
                       new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control eml-form-control",
                               @readonly = true
                           }
                       })
            @*<label class="form-control text-box single-line"
                       style="width: 280px; background-color: #eeeeee;">
                    @Model.Email
                </label>*@
        }
        else
        {
            @Html.EditorFor(model => model.ContentViewModel.Item.Email, new { htmlAttributes = new { @class = "form-control eml-form-control" } })
            @Html.ValidationMessageFor(model => model.ContentViewModel.Item.Email, "", new { @class = "text-danger" })
        }
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ContentViewModel.Item.RoleName, htmlAttributes: new { @class = "control-label " + Model.ContentViewModel.LabelCss })
    <div class="@Model.ContentViewModel.FieldCss">
        @Html.DropDownListFor(model => model.ContentViewModel.Item.RoleName,
             Model.ContentViewModel.GetRoles(Model.ContentViewModel.ParentId),
                                        htmlAttributes: new { @class = "form-control eml-form-control" })
        @Html.ValidationMessageFor(model => model.ContentViewModel.Item.RoleName, "", new { @class = "text-danger" })
    </div>
</div>

