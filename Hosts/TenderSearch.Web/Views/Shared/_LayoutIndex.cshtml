<div class="row">
    <div class="col-md-8 col-lg-8">
        @{
            if (Model.ContentViewModel.AllowTitle)
            {
                <h2 class="animated  fadeIn">@Model.ContentViewModel.Title1</h2>
            }

            if (Model.ContentViewModel.HasParent && Model.ContentViewModel.AllowParentLabel)
            {
                if (!Model.ContentViewModel.HasParentLabel)
                {
                    <h2><em><strong>ParentLabel is empty. Check your ViewModel.</strong></em></h2>
                }
                else
                {
                    <h2 class="animated bounce"><em><strong>@Model.ContentViewModel.Title2</strong></em></h2>
                    if (!string.IsNullOrWhiteSpace(Model.ContentViewModel.Title3))
                    {
                        <h4 class="animated fadeInDown"><strong>@Model.ContentViewModel.Title3</strong></h4>
                    }
                }
            }
            if (!Model.ContentViewModel.AllowAjaxCreate)
            {
                <p>
                    @Html.Partial("_CreateItemButton", Model.ContentViewModel.CreateItemButtonViewModel as CreateItemButtonViewModel)
                </p>
            }
        }
    </div>

    @if (Model.ContentViewModel.AllowSearch)
    {
        <div class="col-md-4 col-lg-4 ">
            @Html.Partial("_Search")
        </div>
    }
    else
    {
        <div class="col-md-4 col-lg-4 " style="display:none;">
            @Html.Partial("_Search")
        </div>
    }

</div>

@*pagedTable is the data-eml-targettablebody in eml.js. pagedTable will be replaced during search  *@
@*style="overflow-x: scroll; " ViewBag.AllowManualSorting*@

<div style="overflow-x: auto; ">
    <table>
        <tr>
            <td>
                <div data-eml-tablecontainer="@Model.ContentViewModel.PagedListViewModel.IsTableContainer.ToString().ToLower()">
                    <table class="table table-striped table-hover table-bordered tableRowHover">
                      @*  @Html.Partial(Model.ContentViewModel.LayoutIndexContentName as string)*@
                        @Html.Partial("_LayoutIndexContents")
                        
                    </table>
                </div>
            </td>
            @{
                if (Model.ContentViewModel.CanManualSort)
                {
                    <td>
                        <div class="btn-group-vertical" role="group" style="margin: 0 3px 3px;">
                            <button data-eml-sorttarget="#@Model.ContentViewModel.PagedListViewModel.TargetTableBody" data-eml-sortdirection="up" class="btn btn-info btn-xs disabled" title="Move Up"><i class="fa fa-2x fa-arrow-circle-up"></i> </button>
                            <button data-eml-sorttarget="#@Model.ContentViewModel.PagedListViewModel.TargetTableBody" data-eml-sortdirection="down" class="btn btn-info btn-xs disabled" title="Move Down"><i class=" fa fa-2x fa-arrow-circle-down"></i></button>
                        </div><br />
                        @using (Html.BeginForm(Model.ContentViewModel.SortActionName as string, Model.ContentViewModel.ControllerName as string, null, FormMethod.Post, new { data_eml_sortorderconfirmation = "true" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("parentId", Model.ContentViewModel.ParentId as int?)
                            @Html.Hidden("page", Model.ContentViewModel.PagedListViewModel.PageNumber as int?)
                            @Html.Hidden("sortItems", "")
                            <div class="btn-group-vertical" role="group" style="margin: 0px 3px 3px;">
                                <button type="submit" value="Save" class="btn btn-primary btn-xs disabled" title="Save" data-eml-sorttarget="#Model.TargetTableBody" data-eml-sortrole="save">
                                    <i class="fa fa-2x fa-save"></i>
                                </button>
                            </div>
                        }
                    </td>
                }
            }
        </tr>
    </table>
</div>

@{
    if (Model.ContentViewModel.AllowSendMail)
    {
        @Html.Partial("_EmailButtonAjax")
    }

    if (Model.HasReturnUrl)
    {
        <div style="margin: 20px 20px 20px 0;">
            @Html.ActionLink("Back to Main", "Goto", new { @returnUrl = Model.ReturnUrl })
        </div>
    }

    @*also apply all changes here to _LayoutIndexContentsAjax*@
    if (Model.ContentViewModel.AllowPagedList)
    {
        @Html.Partial("_PagedList")
    }
}
